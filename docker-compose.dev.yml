version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: moonscope-postgres-dev
    environment:
      POSTGRES_DB: meme_coin_analyzer
      POSTGRES_USER: moonscope
      POSTGRES_PASSWORD: moonscope123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moonscope -d meme_coin_analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: moonscope-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: moonscope-backend-dev
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      HOST: 0.0.0.0
      LOG_LEVEL: debug
      DATABASE_URL: "postgresql://moonscope:moonscope123@postgres:5432/meme_coin_analyzer"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET: "dev-jwt-secret-key"
      RATE_LIMIT_MAX: 1000
      RATE_LIMIT_WINDOW: 60000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    command: sh -c "pnpm run db:push && pnpm run db:seed && pnpm dev"

volumes:
  postgres_dev_data:
  redis_dev_data: